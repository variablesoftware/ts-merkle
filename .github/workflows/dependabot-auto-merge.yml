name: Dependabot Auto Test, Bump & Publish

permissions:
  contents: read # to be able to publish a GitHub release
#  issues: write # to be able to comment on released issues
#  pull-requests: write # to be able to comment on released pull requests
#  id-token: write # to enable use of OIDC for npm provenance

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - "*.x"
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
      - uses: pnpm/action-setup@v3
        with:
          version: latest
  
      # - run: corepack prepare pnpm@10.11.0 --activate
      - run: pnpm install --frozen-lockfile
      - run: pnpm exec eslint --stats . --ext .ts,.tsx
      - run: pnpm exec tsc
      - run: pnpm exec vitest --coverage

  
  coveralls-runner:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - uses: pnpm/action-setup@v3
        with:
          version: latest
  
      # - run: corepack prepare pnpm@10.11.0 --activate
      - run: pnpm install --frozen-lockfile
      - run: pnpm exec tsc
      - run: pnpm exec vitest --coverage --reporter=verbose
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage/lcov.info


  # doesn't actually work, yet.
  test-bump-and-publish-test:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v3
        with:
          version: latest
  
        # Unexpected input(s) 'foo', valid inputs are ['always-auth', 'node-version', 'node-version-file', 'architecture', 'check-latest', 'registry-url', 'scope', 'token', 'cache', 'cache-dependency-path', 'mirror', 'mirror-token']
        with:
          #always-auth: true
          #check-latest: true
          node-version: "lts/*"
          #registry-url: "https://registry.npmjs.org/"
          #scope: ${SCOPE}
          #token: ${NPM_TOKEN}
          #token: ${{secrets.VS_NPM_TOKEN}}
          #token: ${VS_NPM_TOKEN}
      # - run: corepack prepare pnpm@10.11.0 --activate
      - run: pnpm install --frozen-lockfile
      #- run: pnpm --version
      #- run: cat /home/runner/work/_temp/.npmrc
      #- run: cat /home/runner/work/_temp/.pnpmfile.cjs
        #- run: pnpm add -D husky
        #- run: pnpm whoami --scope ${{secrets.scope}} --publish
        #- run: pnpm publish --access public
        #- run: pnpm publish --provenance --access public
      - run: pnpm exec semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCOPE: ${{secrets.scope}}
          NODE_AUTH_TOKEN: ${{ secrets.VS_NPM_TOKEN}}
          NPM_TOKEN: ${{ secrets.VS_NPM_TOKEN}}
          #YARN_NPM_CONFIG_PROVENANCE:
